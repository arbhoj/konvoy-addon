---
apiVersion: kubeaddons.mesosphere.io/v1beta1
kind: Addon
metadata:
  name: kibana-external
  namespace: customaddons
  labels:
    kubeaddons.mesosphere.io/name: kibana-external
    # TODO: we're temporarily supporting dependency on an existing default storage class
    # on the cluster, this hack will trigger re-queue on Addons until one exists
    kubeaddons.mesosphere.io/hack-requires-defaultstorageclass: "true"
  annotations:
    catalog.kubeaddons.mesosphere.io/addon-revision: "1.0.1-1"
    appversion.kubeaddons.mesosphere.io/kibana: "1.0.1"
    values.chart.helm.kubeaddons.mesosphere.io/envoy: "https://raw.githubusercontent.com/helm/charts/master/stable/kibana/values.yaml"
spec:
  kubernetes:
    minSupportedVersion: v1.19.0
  cloudProvider:
    - name: aws
      enabled: true
    - name: azure
      enabled: true
    - name: docker
      enabled: false
    - name: none
      enabled: true
  requires:
    - matchLabels:
        kubeaddons.mesosphere.io/name: elastic-external
  chartReference:
    chart: kibana
    repo: https://mesosphere.github.io/charts/stable
    version: 3.3.1
    values: |
      image:
        name: docker.elastic.co/kibana/kibana-oss
        tag: 6.8.10
      files:
        kibana.yml:
          ## Default Kibana configuration from kibana-docker.
          elasticsearch.hosts: ["http://elastic-external-elasticsearch-client:9200"]
          ## Ref: https://www.elastic.co/guide/en/kibana/current/settings.html
          server.rewriteBasePath: false
          #server.basePath: /ops/ps/kibana
          #server.basePath: /
          server.port: 5601
          server.host: "0.0.0.0"
      serviceAccount:
        create: true
      service:
        type: ClusterIP
        externalPort: 5601
        internalPort: 5601
        labels:
          servicemonitor.kubeaddons.mesosphere.io/path: "prometheus__metrics"
      resources:
        # need more cpu upon initialization, therefore burstable class
        limits:
          cpu: 1000m
        requests:
          cpu: 100m
      plugins:
        # to avoid needing to download any plugins at runtime, use a container and a shared volume
        # do not enable the plugins here, instead rebuild the mesosphere/kibana-plugins image with the new plugins
        # https://github.com/mesosphere/kubeaddons-sidecars
        enabled: false
        values:
          - kibana-prometheus-exporter,7.9.3,https://github.com/pjhampton/kibana-prometheus-exporter/releases/download/7.9.3/kibana-prometheus-exporter-7.9.3.zip
      initContainers:
        # from https://github.com/mesosphere/kubeaddons-sidecars
        - name: kibana-plugins-install
          image: mesosphere/kibana-plugins:v7.9.3
          command: ["/bin/sh", "-c", "cp -a /usr/share/kibana/plugins/. /usr/share/kibana/shared-plugins/"]
          volumeMounts:
          - name: plugins
            mountPath: /usr/share/kibana/shared-plugins/
      extraVolumes:
        - name: plugins
          emptyDir: {}
      extraVolumeMounts:
        - mountPath: /usr/share/kibana/plugins/
          name: plugins
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          traefik.frontend.rule.type: PathPrefixStrip
          traefik.ingress.kubernetes.io/auth-response-headers: X-Forwarded-User,Authorization,Impersonate-User,Impersonate-Group
          traefik.ingress.kubernetes.io/priority: "2"
        hosts:
          #- "/ops/ps/kibana"
          - "kibanatest.sgicorp.spencergifts.com"
      dashboardImport:
        enabled: true
        timeout: 180
        basePath: ""
        dashboards:
